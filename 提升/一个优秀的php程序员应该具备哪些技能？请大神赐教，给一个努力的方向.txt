一个优秀的php程序员应该具备哪些技能？请大神赐教，给一个努力的方向

如果说优秀的php程序员，不如说优秀的web开发者，因为这里牵涉到的技能很多

1、b/s架构，知道b端，s端，知道b/s端的交互协议http
2、s端，lamp、lnmp、redis、memcache等
3、b端，html、css、javascript、jquery等
4、思想，mvc，框架设计思想，模块化编程，oo，设计模式，开发模式
5、性能调优，缓存使用、负载均衡、大数据处理
6、稳定性，测试、出错调试、热备份、热切换等
7、易用性，ui、状态回退、

以上算是计算机相关技能，和计算机不相关技能

1、沟通，你要明白对方说的是什么，也让对方明白你说的是什么
2、分析设计，需求快速分析，优略快速决断，衡量设计
3、学习，技术日新月异，没有一个爱学习的心怎么办
4、责任，拿人钱财，替人消灾
5、书写，文档有时候要强于沟通

其实还是有很多技能没有书写上去，这玩意不是一两句话能说清楚的


1、基本（使用LAMP搭建一个论坛）
涉及php、html、js、mysql增删改查、linux操作、http协议、cookie、session、图片文件上传存储

2、性能（解决论坛可能遇到的性能问题）
数据库索引，分库分表，主从分离；缓存：Memcache、redis、Vanish、CDN；网络问题

3、工程（多人合作开发论坛）
各种框架、代码版本管理（svn, git）、自动测试（PHPUnit等）、文档注释

掌握80%应该就算不错的了（努力中。。。

很多工作一两年的php开发者都会有这样的迷茫，如果没有，说明还没到时候。php开发看起来只是“增删改查调接口”，实际上不仅仅如此，关键在于开发者的眼界有多宽。
我认为高级php工程师应该是这样的： 1，深度方向
熟悉php语言开发：知道如何快速构建工程；知道怎么样开发可读、可扩展性的工程 ；知道怎么规避埋坑给后人；懂得如何利用分层、面向对象、设计模式写出优雅代码；熟悉语言特性，知道怎么用一两行代码代替初级开发者十几上百行代码。


如果能趁开发工程的时候顺便抽象出代码框架那最好不过。初级开发者通常会等到逻辑重复时再抽象封装（甚至怕拖进度或者懒惰而放弃），而高级开发者通常一开始写出的逻辑就为了以后的重用，并且深知一开始多付出的思考设计时间最终都会因为复用得到回报！

如果你已经很熟悉业务开发了（到这一步不至于饿死），而且写出的代码不会被后接手人吐槽（可以带小弟了），并且知道怎么抽象出简单易用健壮耐操的框架了（可以主导项目了），那可以进一步深入性能优化。
性能优化途径很多，可以固化逻辑成php扩展，可以研究php源码了解内部实现（对调用的函数类库性能有所了解），可以利用开源框架开源引擎。这就得要求你花很多时间学习了，并且也是千万亿级别访问的站点开发必要技能。当然性能瓶颈通常不在于php语言本身，而在于php之外的其他设施，这就是下面引入的广度。

2，广度
php开发基本上离不开操作系统、存储、缓存、网络、webserver等等，因此这也是高阶必备技能，因为一旦你的业务出问题了，没有各方面知识，很难快速定位到问题关键点。

比如存储mysql，高级开发者懂得利用索引、利用分表分库提高查询性能，懂得负载均衡和灾备提高性能提高可靠性（虽然是DBA的工作，但了解了有助于出问题时排查）

比如缓存，高级开发者懂得如何有效且最大限度利用缓存系统提高应用性能。

比如http，初级开发者往往只懂得http网络请求就只一去一回两个包，高级开发者会去深究网络七层模型、会深究http请求的各个环节（DNS、三次握手等等）

广度方向还可以是web前端学习，学习如何依靠浏览器缓存、CDN缓存、压缩代码、合并文件等等提高前端性能，学习如何进行前端安全攻防。

甚至还可以尝试其他语言，比如最近很火的Node.js，了解下其事件驱动机制，如何在IO密集时快速响应。

3，软素质
懂得团队管理，项目管理，沟通技巧等等。（有空再展开）

以上观点同样适用于其他语言的开发者，小孩才分语言！ 