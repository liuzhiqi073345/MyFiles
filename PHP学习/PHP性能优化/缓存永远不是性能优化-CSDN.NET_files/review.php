$(".reviewcount,.commentcount,.cmtcount").text('22');$("#commentlist").html('<ul class="commentlist"><li id="comment_327966"><span class="u"><a href="http://my.csdn.net/linustd" target="_blank"><img src="http://avatar.csdn.net/F/C/D/3_linustd.jpg" /></a></span><span class="t">linustd 2012-09-03 10:18:50 </span><p>缓存的确不是性能优化。<br /><br />我们还是从计算机基础理论寻找缓存的最佳实践吧。<br /><br />首要放弃SQl，开发一种内存数据库式样的列表，该内存数据库支持SQL样式的检索，但是不使用SQL，该内存Model就是我们MVC里的Model，内存Model使用适配器同磁盘上的持久化数据库、文件关联。内存Model中只存放热数据，如果内存Model没有找到则通过适配器去查找持久化存储。<br />当然这存在一个延迟验证的问题，因为不可能把持久化存储中的所有依赖关系都存入内存Model。<br />此解决方案，如果硬盘、内存、CPU Cache一样的道理，对程序都是透明的。可惜我们很多牛逼呼呼的网站，整天叫嚣什么memcache\redias等，使用硬编码在程序里使用缓存，根本就忘记了缓存对程序透明这一基本原则。</p><p class="detail"><a href="###" onclick="jQCmt.reply(327966);">回复(8)</a> <a id="cmtDig_327966" href="###" onclick="jQCmt.digg(327966, \' ac3dfe \' );">支持(1)</a> <a id="cmtBry_327966" href="###" onclick="jQCmt.bury(327966, \' ac3dfe \' );">反对(5)</a> <a id="cmtRpt_327966" href="###" onclick="jQCmt.report(327966, \' ac3dfe \' );">举报(0)</a>  | 8条回复..</p><ul id="ccommentlist_327966" class="commentlist ccommentlist"><li id="comment_328077"><span class="u"><a href="http://my.csdn.net/netease" target="_blank"><img src="http://avatar.csdn.net/E/F/2/3_netease.jpg" /></a></span><span>netease 2012-09-03 15:32:02 </span><p>现在关系数据库都支持啊，至少我知道SQL SERVER是可以设置表数据放到内存中的，对程序是完全透明的，不需要修改代码。DBCC PINTABLE ( database_id , table_id ) 就可以</p><p class="detail"><a href="###" onclick="jQCmt.reply(328077);">回复(1)</a> <a id="cmtDig_328077" href="###" onclick="jQCmt.digg(328077, \' 25c1b6 \' );">支持(0)</a> <a id="cmtBry_328077" href="###" onclick="jQCmt.bury(328077, \' 25c1b6 \' );">反对(0)</a> <a id="cmtRpt_328077" href="###" onclick="jQCmt.report(328077, \' 25c1b6 \' );">举报(0)</a> </p></li><li id="comment_328165"><span class="u"><a href="http://my.csdn.net/linustd" target="_blank"><img src="http://avatar.csdn.net/F/C/D/3_linustd.jpg" /></a></span><span>linustd 2012-09-03 20:18:56 </span><blockquote><span><em>引用内容</em>netease 2012-09-03 15:32:02</span>现在关系数据库都支持啊，至少我知道SQL SERVER是可以设置表数据放到内存中的，对程序是完全透明的，不需要修改代码。..</blockquote><p class="ccmsg">哥们，我说的是内存数据库是在你程序的进程里，不是数据库的进程里。<br />我们通常用的实体类，实体类集合，完全可以设计成一种内存数据库，由这种内存数据库自己去同持久化存储打交道，并且适当的缓存热数据，这才是正确程序设计方向。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328165);">回复(3)</a> <a id="cmtDig_328165" href="###" onclick="jQCmt.digg(328165, \' 18e0c9 \' );">支持(0)</a> <a id="cmtBry_328165" href="###" onclick="jQCmt.bury(328165, \' 18e0c9 \' );">反对(0)</a> <a id="cmtRpt_328165" href="###" onclick="jQCmt.report(328165, \' 18e0c9 \' );">举报(0)</a> </p></li><li id="comment_328173"><span class="u"><a href="http://my.csdn.net/linustd" target="_blank"><img src="http://avatar.csdn.net/F/C/D/3_linustd.jpg" /></a></span><span>linustd 2012-09-03 20:35:49 </span><p>这里的关键是，我们的文件，不管是UNIX和Windows，都是流的概念，也就是二进制无格式。程序设计不管是java/c++/.net，都是使用了一种流的类来读写文件。<br /><br />但是我们难道就不能设计一种结构化的文件结构吗？我们设计一种新的文件系统，我们不用流的概念来读写文件，我们类似用关系数据类似的集合、结构化数据结构来读写文件。<br /><br />此乃一个可行的研究方向。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328173);">回复(1)</a> <a id="cmtDig_328173" href="###" onclick="jQCmt.digg(328173, \' 91d00f \' );">支持(0)</a> <a id="cmtBry_328173" href="###" onclick="jQCmt.bury(328173, \' 91d00f \' );">反对(0)</a> <a id="cmtRpt_328173" href="###" onclick="jQCmt.report(328173, \' 91d00f \' );">举报(0)</a> </p></li><li id="comment_328249"><span class="u"><a href="http://my.csdn.net/songjiyuan" target="_blank"><img src="http://avatar.csdn.net/7/6/3/3_songjiyuan.jpg" /></a></span><span>songjiyuan 2012-09-04 09:06:06 </span><blockquote><span><em>引用内容</em>linustd 2012-09-03 20:18:56</span>哥们，我说的是内存数据库是在你程序的进程里，不是数据库的进程里。<br />我们通常用的实体类，实体类集合，完全可以设计..</blockquote><p class="ccmsg">这样做, 如果是分布式数据一致性怎么保证, 你说的内容仅针对单点而已, memcached等内存数据库的使用场景不在这</p><p class="detail"><a href="###" onclick="jQCmt.reply(328249);">回复(1)</a> <a id="cmtDig_328249" href="###" onclick="jQCmt.digg(328249, \' 8a9de5 \' );">支持(0)</a> <a id="cmtBry_328249" href="###" onclick="jQCmt.bury(328249, \' 8a9de5 \' );">反对(0)</a> <a id="cmtRpt_328249" href="###" onclick="jQCmt.report(328249, \' 8a9de5 \' );">举报(0)</a> </p></li><li id="comment_328263"><span class="u"><a href="http://my.csdn.net/linustd" target="_blank"><img src="http://avatar.csdn.net/F/C/D/3_linustd.jpg" /></a></span><span>linustd 2012-09-04 09:20:35 </span><blockquote><span><em>引用内容</em>songjiyuan 2012-09-04 09:06:06</span>这样做, 如果是分布式数据一致性怎么保证, 你说的内容仅针对单点而已, memcached等内存数据库的使用场景不在这..</blockquote><p class="ccmsg">这和分布式有关系吗？<br />这影响是使用集群了吗？</p><p class="detail"><a href="###" onclick="jQCmt.reply(328263);">回复(0)</a> <a id="cmtDig_328263" href="###" onclick="jQCmt.digg(328263, \' 0a8da8 \' );">支持(0)</a> <a id="cmtBry_328263" href="###" onclick="jQCmt.bury(328263, \' 0a8da8 \' );">反对(0)</a> <a id="cmtRpt_328263" href="###" onclick="jQCmt.report(328263, \' 0a8da8 \' );">举报(0)</a> </p></li><li id="comment_328783"><span class="u"><a href="http://my.csdn.net/fryhunter" target="_blank"><img src="http://avatar.csdn.net/1/4/E/3_fryhunter.jpg" /></a></span><span>fryhunter 2012-09-05 09:44:12 </span><blockquote><span><em>引用内容</em>linustd 2012-09-03 20:18:56</span>哥们，我说的是内存数据库是在你程序的进程里，不是数据库的进程里。<br />我们通常用的实体类，实体类集合，完全可以设计..</blockquote><p class="ccmsg">你说的是一个思路，但是这个和流并无冲突。所有内存里面数据，实际上都是二进制而已，关键是你如何读取的问题。其实你的实体类，暂且叫数据类型吧，不过就是二进制数据加上读写操作。所以，你提的概念本质上还是二进制流，只是你再增加一层封装。<br />不过实现你要的功能，难点相对而言还是蛮多的，尤其那一句适当的缓存热数据，这个适当是个比较让人头大的问题。<br />但真的封装出你说的功能，相对而言，还是很不错的。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328783);">回复(0)</a> <a id="cmtDig_328783" href="###" onclick="jQCmt.digg(328783, \' 320009 \' );">支持(0)</a> <a id="cmtBry_328783" href="###" onclick="jQCmt.bury(328783, \' 320009 \' );">反对(0)</a> <a id="cmtRpt_328783" href="###" onclick="jQCmt.report(328783, \' 320009 \' );">举报(0)</a> </p></li><li id="comment_329905"><span class="u"><a href="http://my.csdn.net/zenme" target="_blank"><img src="http://avatar.csdn.net/F/E/7/3_zenme.jpg" /></a></span><span>zenme 2012-09-08 00:21:44 </span><blockquote><span><em>引用内容</em>linustd 2012-09-03 20:35:49</span>这里的关键是，我们的文件，不管是UNIX和Windows，都是流的概念，也就是二进制无格式。程序设计不管是java/c+..</blockquote><p class="ccmsg">数据库是怎么来的，就是当文件方式已经不能满足对数据的管理的需求时才提出来的</p><p class="detail"><a href="###" onclick="jQCmt.reply(329905);">回复(0)</a> <a id="cmtDig_329905" href="###" onclick="jQCmt.digg(329905, \' bd8cc4 \' );">支持(0)</a> <a id="cmtBry_329905" href="###" onclick="jQCmt.bury(329905, \' bd8cc4 \' );">反对(0)</a> <a id="cmtRpt_329905" href="###" onclick="jQCmt.report(329905, \' bd8cc4 \' );">举报(0)</a> </p></li><li id="comment_331045"><span class="u"><a href="http://my.csdn.net/netease" target="_blank"><img src="http://avatar.csdn.net/E/F/2/3_netease.jpg" /></a></span><span>netease 2012-09-12 20:12:31 </span><blockquote><span><em>引用内容</em>linustd 2012-09-03 20:18:56</span>哥们，我说的是内存数据库是在你程序的进程里，不是数据库的进程里。<br />我们通常用的实体类，实体类集合，完全可以设计..</blockquote><p class="ccmsg">Linq To Object之类的技术就可以对内存对象的SQL查询，但是海量对象的话，还需要在内存中维护索引，不然效率是个问题。对象数据库（比如db4o）进行一定优化也可以，提前加载对象到内存中，只不过查询语言是OQL。</p><p class="detail"><a href="###" onclick="jQCmt.reply(331045);">回复(0)</a> <a id="cmtDig_331045" href="###" onclick="jQCmt.digg(331045, \' 68964a \' );">支持(0)</a> <a id="cmtBry_331045" href="###" onclick="jQCmt.bury(331045, \' 68964a \' );">反对(0)</a> <a id="cmtRpt_331045" href="###" onclick="jQCmt.report(331045, \' 68964a \' );">举报(0)</a> </p></li></ul></li><li id="comment_328978"><span class="u"><a href="http://my.csdn.net/datafansbj" target="_blank"><img src="http://avatar.csdn.net/C/F/5/3_datafansbj.jpg" /></a></span><span class="t">datafansbj 2012-09-05 14:51:44 </span><p>胡言乱语，不知在说什么。<br />性能优化的结果是性能的提升，只要能提升，都是优化的方法（当然前提是结果是正确的）。<br />缓存是提升性能的有效方法，怎么又不是性能优化了呢？<br />只能说缓存是性能优化的工具而不是目的。<br />缓存适合频繁操作的场景，并不适合不频繁操作的场景。<br />飞机比火车快，但是不能得出这样的结论：因为飞机比火车快，所以我从北京到天津必须坐飞机以加快速度。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328978);">回复(0)</a> <a id="cmtDig_328978" href="###" onclick="jQCmt.digg(328978, \' e1720b \' );">支持(3)</a> <a id="cmtBry_328978" href="###" onclick="jQCmt.bury(328978, \' e1720b \' );">反对(0)</a> <a id="cmtRpt_328978" href="###" onclick="jQCmt.report(328978, \' e1720b \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328978" class="commentlist ccommentlist"></ul></li><li id="comment_328734"><span class="u"><a href="http://my.csdn.net/test_lockxxx" target="_blank"><img src="http://avatar.csdn.net/D/6/3/3_test_lockxxx.jpg" /></a></span><span class="t">test_lockxxx 2012-09-05 08:44:29 </span><p>硬盘的读写速度如果达到内存的速度，谁还用缓存</p><p class="detail"><a href="###" onclick="jQCmt.reply(328734);">回复(0)</a> <a id="cmtDig_328734" href="###" onclick="jQCmt.digg(328734, \' 15dd15 \' );">支持(0)</a> <a id="cmtBry_328734" href="###" onclick="jQCmt.bury(328734, \' 15dd15 \' );">反对(0)</a> <a id="cmtRpt_328734" href="###" onclick="jQCmt.report(328734, \' 15dd15 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328734" class="commentlist ccommentlist"></ul></li><li id="comment_328701"><span class="u"><a href="http://my.csdn.net/jiangugv" target="_blank"><img src="http://avatar.csdn.net/C/4/8/3_jiangugv.jpg" /></a></span><span class="t">jiangugv 2012-09-05 00:18:01 </span><p>对热点数据用缓存是没错的，读内存再怎么都比读数据库快；同时缓存也带来程序的逻辑困难。<br />对站点的性能优化，缓存只是一个优化点，服务器优化，文件压缩，网络优化都是重点，重要的是找到系统的瓶颈，这个时候就需要进行模拟性能测试才行！</p><p class="detail"><a href="###" onclick="jQCmt.reply(328701);">回复(0)</a> <a id="cmtDig_328701" href="###" onclick="jQCmt.digg(328701, \' 7fc222 \' );">支持(0)</a> <a id="cmtBry_328701" href="###" onclick="jQCmt.bury(328701, \' 7fc222 \' );">反对(0)</a> <a id="cmtRpt_328701" href="###" onclick="jQCmt.report(328701, \' 7fc222 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328701" class="commentlist ccommentlist"></ul></li><li id="comment_328683"><span class="u"><a href="http://my.csdn.net/jspkey" target="_blank"><img src="http://avatar.csdn.net/6/0/6/3_jspkey.jpg" /></a></span><span class="t">jspkey 2012-09-04 23:20:37 </span><p>看问题的角度粒度不同，得出的结论也就不同</p><p class="detail"><a href="###" onclick="jQCmt.reply(328683);">回复(0)</a> <a id="cmtDig_328683" href="###" onclick="jQCmt.digg(328683, \' 87f10d \' );">支持(1)</a> <a id="cmtBry_328683" href="###" onclick="jQCmt.bury(328683, \' 87f10d \' );">反对(0)</a> <a id="cmtRpt_328683" href="###" onclick="jQCmt.report(328683, \' 87f10d \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328683" class="commentlist ccommentlist"></ul></li><li id="comment_328388"><span class="u"><a href="http://my.csdn.net/boluo424" target="_blank"><img src="http://avatar.csdn.net/C/3/7/3_boluo424.jpg" /></a></span><span class="t">boluo424 2012-09-04 12:16:48 </span><p>这是技术发展大体系下的必然分工，也是运维摆脱苦力劳作，继续往更深技术发展的必然之路。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328388);">回复(0)</a> <a id="cmtDig_328388" href="###" onclick="jQCmt.digg(328388, \' 162ab6 \' );">支持(0)</a> <a id="cmtBry_328388" href="###" onclick="jQCmt.bury(328388, \' 162ab6 \' );">反对(0)</a> <a id="cmtRpt_328388" href="###" onclick="jQCmt.report(328388, \' 162ab6 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328388" class="commentlist ccommentlist"></ul></li><li id="comment_328386"><span class="u"><a href="http://my.csdn.net/boluo424" target="_blank"><img src="http://avatar.csdn.net/C/3/7/3_boluo424.jpg" /></a></span><span class="t">boluo424 2012-09-04 12:13:48 </span><p>那啥是性能优化呢？</p><p class="detail"><a href="###" onclick="jQCmt.reply(328386);">回复(0)</a> <a id="cmtDig_328386" href="###" onclick="jQCmt.digg(328386, \' 81903f \' );">支持(0)</a> <a id="cmtBry_328386" href="###" onclick="jQCmt.bury(328386, \' 81903f \' );">反对(0)</a> <a id="cmtRpt_328386" href="###" onclick="jQCmt.report(328386, \' 81903f \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328386" class="commentlist ccommentlist"></ul></li><li id="comment_328224"><span class="u"><a href="http://my.csdn.net/haoshen1987" target="_blank"><img src="http://avatar.csdn.net/1/6/8/3_haoshen1987.jpg" /></a></span><span class="t">haoshen1987 2012-09-04 06:55:58 </span><p>缓存的首要条件是要满足局部性原理，而且相关算法和缓存大小的设置对性能影响相当大，是要通过大量统计才能做出合理方案的，小数据量的实验根本不能说明问题。这在计算机基础理论里说的很明白。不能因为在使用缓存时效率没提高就说缓存不能做到性能优化，这只能说明缓存使用不当。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328224);">回复(0)</a> <a id="cmtDig_328224" href="###" onclick="jQCmt.digg(328224, \' 7a5a70 \' );">支持(4)</a> <a id="cmtBry_328224" href="###" onclick="jQCmt.bury(328224, \' 7a5a70 \' );">反对(0)</a> <a id="cmtRpt_328224" href="###" onclick="jQCmt.report(328224, \' 7a5a70 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328224" class="commentlist ccommentlist"></ul></li><li id="comment_328188"><span class="u"><a href="http://my.csdn.net/SisMVG" target="_blank"><img src="http://avatar.csdn.net/F/D/8/3_SisMVG.jpg" /></a></span><span class="t">SisMVG 2012-09-03 21:54:38 </span><p>数据块大而且连续这个时候用缓存比较好，要是像碎片一样的数据反而会消耗时间</p><p class="detail"><a href="###" onclick="jQCmt.reply(328188);">回复(0)</a> <a id="cmtDig_328188" href="###" onclick="jQCmt.digg(328188, \' 8a5c69 \' );">支持(0)</a> <a id="cmtBry_328188" href="###" onclick="jQCmt.bury(328188, \' 8a5c69 \' );">反对(0)</a> <a id="cmtRpt_328188" href="###" onclick="jQCmt.report(328188, \' 8a5c69 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328188" class="commentlist ccommentlist"></ul></li><li id="comment_328010"><span class="u"><a href="http://my.csdn.net/tkminigame" target="_blank"><img src="http://avatar.csdn.net/7/E/2/3_tkminigame.jpg" /></a></span><span class="t">tkminigame 2012-09-03 11:38:22 </span><p>只能说此cache非彼cache，大家的说的cache都不同，实现方法不同，怎么做比较。</p><p class="detail"><a href="###" onclick="jQCmt.reply(328010);">回复(0)</a> <a id="cmtDig_328010" href="###" onclick="jQCmt.digg(328010, \' 010d67 \' );">支持(0)</a> <a id="cmtBry_328010" href="###" onclick="jQCmt.bury(328010, \' 010d67 \' );">反对(0)</a> <a id="cmtRpt_328010" href="###" onclick="jQCmt.report(328010, \' 010d67 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_328010" class="commentlist ccommentlist"></ul></li><li id="comment_327946"><span class="u"><a href="http://my.csdn.net/guilipan" target="_blank"><img src="http://avatar.csdn.net/0/1/7/3_guilipan.jpg" /></a></span><span class="t">guilipan 2012-09-03 10:03:02 </span><p>对缓存应当是利用而不是滥用</p><p class="detail"><a href="###" onclick="jQCmt.reply(327946);">回复(0)</a> <a id="cmtDig_327946" href="###" onclick="jQCmt.digg(327946, \' 1e6692 \' );">支持(1)</a> <a id="cmtBry_327946" href="###" onclick="jQCmt.bury(327946, \' 1e6692 \' );">反对(0)</a> <a id="cmtRpt_327946" href="###" onclick="jQCmt.report(327946, \' 1e6692 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_327946" class="commentlist ccommentlist"></ul></li><li id="comment_327929"><span class="u"><a href="http://my.csdn.net/chishaxie" target="_blank"><img src="http://avatar.csdn.net/3/F/9/3_chishaxie.jpg" /></a></span><span class="t">chishaxie 2012-09-03 09:29:21 </span><p>缓存对有热点的系统不能加速！？</p><p class="detail"><a href="###" onclick="jQCmt.reply(327929);">回复(0)</a> <a id="cmtDig_327929" href="###" onclick="jQCmt.digg(327929, \' 102fe6 \' );">支持(0)</a> <a id="cmtBry_327929" href="###" onclick="jQCmt.bury(327929, \' 102fe6 \' );">反对(0)</a> <a id="cmtRpt_327929" href="###" onclick="jQCmt.report(327929, \' 102fe6 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_327929" class="commentlist ccommentlist"></ul></li><li id="comment_327921"><span class="u"><a href="http://my.csdn.net/Funniest" target="_blank"><img src="http://avatar.csdn.net/4/2/9/3_Funniest.jpg" /></a></span><span class="t">Funniest 2012-09-03 09:19:56 </span><p>缓存对间歇式系统很合适。</p><p class="detail"><a href="###" onclick="jQCmt.reply(327921);">回复(0)</a> <a id="cmtDig_327921" href="###" onclick="jQCmt.digg(327921, \' cc48f1 \' );">支持(1)</a> <a id="cmtBry_327921" href="###" onclick="jQCmt.bury(327921, \' cc48f1 \' );">反对(0)</a> <a id="cmtRpt_327921" href="###" onclick="jQCmt.report(327921, \' cc48f1 \' );">举报(0)</a>  | 0条回复..</p><ul id="ccommentlist_327921" class="commentlist ccommentlist"></ul></li></ul>');$("#commentlist").hide();$("#commentlist").fadeIn();$("#commentpage").html('<a href="###" class="gray">第一页</a><a href="###" class="gray">上一页</a><a href="###" class="selc">1</a><a href="###" class="gray">下一页</a><a href="###" class="gray">最末页</a>');$("#commentpage a").click(function(){jQCmt.getCmt(this.href);jQCmt.scrollTo("#comment");return false;});$("#digestComment").hide();$('.digc .digcolumn>.dc1').height('0px');$('.digc .digcolumn>.dc1 em').text('0');$('.digc .digcolumn>.dc2').height('0px');$('.digc .digcolumn>.dc2 em').text('0');$('.digc .digcolumn>.dc3').height('0px');$('.digc .digcolumn>.dc3 em').text('0');$('.digc .digcolumn>.dc4').height('0px');$('.digc .digcolumn>.dc4 em').text('0');$('.digc .digcolumn>.dc5').height('0px');$('.digc .digcolumn>.dc5 em').text('0');$('.digc .digcolumn>.dc6').height('0px');$('.digc .digcolumn>.dc6 em').text('0');$('.digc .digcolumn>.dc7').height('0px');$('.digc .digcolumn>.dc7 em').text('0');$('.digc .digcolumn>.dc8').height('0px');$('.digc .digcolumn>.dc8 em').text('0');$('.digc .digcolumn>.dc9').height('0px');$('.digc .digcolumn>.dc9 em').text('0');$('.digc .digcolumn>.dc10').height('0px');$('.digc .digcolumn>.dc10 em').text('0');jQCmt.signed=true;$("#cLPnl,#rLPnl,.rLPnl").html('欢迎你，<a href="http://hi.csdn.net/zc80330582" target="_blank">zc80330582</a>');$("#cLPnl,#rLPnl,.rLPnl").show();$("#cAPnl,#rAPnl,.rAPnl").hide();$("input[name='anonymous']").attr("checked","");